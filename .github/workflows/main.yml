# This is a basic workflow to help you get started with Actions

name: HelloCI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #runs-on: self-hosted
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: echo-default-env-variables
        run: |
           echo "GITHUB_WORKSPACE = $GITHUB_WORKSPACE"
           echo "github.workspace = ${{ github.workspace }}"
           echo "${{ github.workspace }}" + "\HelloWorldAPI\HelloWorldAPI.sln"
           echo "${{ github.workspace }}\HelloWorldAPI\HelloWorldAPI.sln"
           echo  ${{runner.temp}}


      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
          
      - name: Restore dependencies
        #run: dotnet restore **/HelloWorldAPI.sln
        run: dotnet restore ${{ github.workspace }}/HelloWorldAPI/HelloWorldAPI.sln

      - name: Build
        #run: dotnet build **/HelloWorldAPI.sln --no-restore
        run: dotnet build ${{ github.workspace }}/HelloWorldAPI/HelloWorldAPI.sln --no-restore

      - name: Test
        #run: dotnet test **/*.UnitTests.csproj --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx
        run: dotnet test ${{ github.workspace }}/HelloWorldAPI/HelloWorldAPI.sln --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx


    

      - name: Copy Coverage To Predictable Location
        #run: cp ${{ github.workspace }}/TestSample.UnitTests/TestResults/*/coverage.cobertura.xml ${{runner.temp}}/coverage.cobertura.xml
        run: cp ${{ github.workspace }}/HelloWorldAPI/HelloWorldAPI.sln ${{runner.temp}}/ 

 

      #- name: Code Coverage Summary Report
      #  uses: irongut/CodeCoverageSummary@v1.0.2
      #  with:
      #    filename: ${{runner.temp}}/coverage.cobertura.xml
      #    badge: true
      #    format: 'markdown'
      #    output: 'both'
     
      - name: Publish
        run: dotnet publish HelloWorldAPI/HelloWorldAPI.csproj -c Release -o web

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          # Artifact name
          name: web
          # A file, directory or wildcard pattern that describes what to upload
          path: HelloWorldAPI/web/**
          if-no-files-found: error 