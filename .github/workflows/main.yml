# This is a basic workflow to help you get started with Actions

name: HelloCI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]



  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  acr_name: rahulacrvssub.azurecr.io
  acr_user_name: rahulacrvssub
  acr_repository_name: k8sdemo
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.sha }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #runs-on: self-hosted
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: echo-default-env-variables
        run: |
           echo "GITHUB_WORKSPACE = $GITHUB_WORKSPACE"
           echo "github.workspace = ${{ github.workspace }}"
           echo "${{ github.workspace }}" + "\HelloWorldAPI\HelloWorldAPI.sln"
           echo "${{ github.workspace }}\HelloWorldAPI\HelloWorldAPI.sln"
           echo  ${{runner.temp}}
           echo  ${{secrets.GIST_AUTH_TOKEN}}
           echo  ${{secrets.GITHUB_TOKEN }}
           echo  ${{ github.actor }}
           echo  ${{ env.REGISTRY }}
           echo  ${{ github.repository }}
           echo  $IMAGE_NAME
           echo  $acr_name
           echo  ${{ env.acr_name }}

      - name: token-replacement
        uses: cschleiden/replace-tokens@v1.1
        with:
          tokenPrefix: '{{'
          tokenSuffix: '}}'
          files: '["**/*.json"]'
        env:
          #CDN: https://somecdn.com/...
          GIST_AUTH_TOKEN: $secrets.GIST_AUTH_TOKEN


      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
          
      - name: login to acr
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.acr_name }}
          username: ${{ env.acr_user_name }}
          password: ${{ secrets.acr_pwd }}
          
      - run: |
          docker build -f ${{ github.workspace }}/HelloWorldAPI/Dockerfile . -t ${{ env.acr_name }}/${{ env.acr_repository_name }}:${{ github.sha }}
          docker push ${{env.acr_name}}/${{env.acr_repository_name}}:${{ github.sha }}


      - name: Push to github registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: docker build . --file ${{ github.workspace }}/HelloWorldAPI/Dockerfile --tag $IMAGE_NAME --label "runnumber=${{ github.sha }}"

      - name: Push image
        run: |
          repo=$(echo ${{ github.repository }} | tr '[A-Z]' '[a-z]')
          IMAGE_ID=${{ env.REGISTRY }}/$repo/$IMAGE_NAME
          docker tag $IMAGE_NAME $IMAGE_ID:latest
          #docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID 