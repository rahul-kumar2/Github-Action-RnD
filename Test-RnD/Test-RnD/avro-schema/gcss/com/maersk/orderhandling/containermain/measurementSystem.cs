// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace com.maersk.orderhandling.containermain
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class measurementSystem : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""measurementSystem"",""namespace"":""com.maersk.orderhandling.containermain"",""fields"":[{""name"":""measurementSystemCode"",""doc"":""The abbreviated measure system name. - E.g.: S.I. (Metric), Imperial, US Customary Units, Time, Industry Standard."",""type"":""string""},{""name"":""measurementSystemName"",""doc"":""The full measure system name."",""type"":""string""}]}");
		/// <summary>
		/// The abbreviated measure system name. - E.g.: S.I. (Metric), Imperial, US Customary Units, Time, Industry Standard.
		/// </summary>
		private string _measurementSystemCode;
		/// <summary>
		/// The full measure system name.
		/// </summary>
		private string _measurementSystemName;
		public virtual Schema Schema
		{
			get
			{
				return measurementSystem._SCHEMA;
			}
		}
		/// <summary>
		/// The abbreviated measure system name. - E.g.: S.I. (Metric), Imperial, US Customary Units, Time, Industry Standard.
		/// </summary>
		public string measurementSystemCode
		{
			get
			{
				return this._measurementSystemCode;
			}
			set
			{
				this._measurementSystemCode = value;
			}
		}
		/// <summary>
		/// The full measure system name.
		/// </summary>
		public string measurementSystemName
		{
			get
			{
				return this._measurementSystemName;
			}
			set
			{
				this._measurementSystemName = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.measurementSystemCode;
			case 1: return this.measurementSystemName;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.measurementSystemCode = (System.String)fieldValue; break;
			case 1: this.measurementSystemName = (System.String)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
