// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace com.maersk.orderhandling.containermain
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class equipmentType : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""equipmentType"",""namespace"":""com.maersk.orderhandling.containermain"",""fields"":[{""name"":""equipmentTypeCode"",""doc"":""The Maersk code for equipment type."",""type"":""string""},{""name"":""equipmentTypeName"",""doc"":""The Maersk name for equipment type."",""default"":null,""type"":[""null"",""string""]},{""name"":""equipmentTypeChildEquipmentType"",""doc"":""Subtype description of the container type. This is upper level of the recursion level 0. It is not spelled out here to allow the Avro schema to be backward and forward compliant."",""default"":null,""type"":[""null"",{""type"":""record"",""name"":""equipmentTypeChildEquipmentType"",""namespace"":""com.maersk.orderhandling.containermain"",""fields"":[{""name"":""equipmentTypeCode"",""doc"":""The Maersk code for equipment type."",""type"":""string""},{""name"":""equipmentTypeName"",""doc"":""The Maersk name for equipment type."",""default"":null,""type"":[""null"",""string""]},{""name"":""equipmentTypeChildEquipmentTypeL1"",""doc"":""Subtype description of the container type. This is lower level of the recursion level 1."",""default"":null,""type"":[""null"",{""type"":""record"",""name"":""equipmentTypeChildEquipmentTypeL1"",""namespace"":""com.maersk.orderhandling.containermain"",""fields"":[{""name"":""equipmentTypeCode"",""doc"":""The Maersk code for equipment type."",""type"":""string""},{""name"":""equipmentTypeName"",""doc"":""The Maersk name for equipment type."",""default"":null,""type"":[""null"",""string""]}]}]}]}]}]}");
		/// <summary>
		/// The Maersk code for equipment type.
		/// </summary>
		private string _equipmentTypeCode;
		/// <summary>
		/// The Maersk name for equipment type.
		/// </summary>
		private string _equipmentTypeName;
		/// <summary>
		/// Subtype description of the container type. This is upper level of the recursion level 0. It is not spelled out here to allow the Avro schema to be backward and forward compliant.
		/// </summary>
		private com.maersk.orderhandling.containermain.equipmentTypeChildEquipmentType _equipmentTypeChildEquipmentType;
		public virtual Schema Schema
		{
			get
			{
				return equipmentType._SCHEMA;
			}
		}
		/// <summary>
		/// The Maersk code for equipment type.
		/// </summary>
		public string equipmentTypeCode
		{
			get
			{
				return this._equipmentTypeCode;
			}
			set
			{
				this._equipmentTypeCode = value;
			}
		}
		/// <summary>
		/// The Maersk name for equipment type.
		/// </summary>
		public string equipmentTypeName
		{
			get
			{
				return this._equipmentTypeName;
			}
			set
			{
				this._equipmentTypeName = value;
			}
		}
		/// <summary>
		/// Subtype description of the container type. This is upper level of the recursion level 0. It is not spelled out here to allow the Avro schema to be backward and forward compliant.
		/// </summary>
		public com.maersk.orderhandling.containermain.equipmentTypeChildEquipmentType equipmentTypeChildEquipmentType
		{
			get
			{
				return this._equipmentTypeChildEquipmentType;
			}
			set
			{
				this._equipmentTypeChildEquipmentType = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.equipmentTypeCode;
			case 1: return this.equipmentTypeName;
			case 2: return this.equipmentTypeChildEquipmentType;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.equipmentTypeCode = (System.String)fieldValue; break;
			case 1: this.equipmentTypeName = (System.String)fieldValue; break;
			case 2: this.equipmentTypeChildEquipmentType = (com.maersk.orderhandling.containermain.equipmentTypeChildEquipmentType)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
