// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace com.maersk.orderhandling.containermain
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class container : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"container\",\"namespace\":\"com.maersk.orderhandling.contain" +
				"ermain\",\"fields\":[{\"name\":\"isoCombinedCode\",\"doc\":\"The full ISO 6346 standardise" +
				"d container identification code.\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"nam" +
				"e\":\"isoOwnerCode\",\"doc\":\"The owning company\'s ISO 6346 code.\",\"default\":null,\"ty" +
				"pe\":[\"null\",\"string\"]},{\"name\":\"isoCategoryCode\",\"doc\":\"The equipment type ISO 6" +
				"346 category code - this will be \'U\'.\",\"default\":null,\"type\":[\"null\",\"string\"]}," +
				"{\"name\":\"isoSerialNumber\",\"doc\":\"The ISO 6346 equipment identification code seri" +
				"al number part.\",\"default\":null,\"type\":[\"null\",\"int\"]},{\"name\":\"isoCheckDigitNum" +
				"ber\",\"doc\":\"The ISO 6346 equipment identification code check digit.\",\"default\":n" +
				"ull,\"type\":[\"null\",\"int\"]},{\"name\":\"equipmentSizeType\",\"doc\":\"A classification o" +
				"f size and type of the container.\",\"type\":{\"type\":\"record\",\"name\":\"equipmentSize" +
				"Type\",\"namespace\":\"com.maersk.orderhandling.containermain\",\"fields\":[{\"name\":\"si" +
				"zeTypeCode\",\"doc\":\"The ISO code for the size and type.\",\"default\":null,\"type\":[\"" +
				"null\",\"string\"]},{\"name\":\"description\",\"doc\":\"A description of the container siz" +
				"e and type.\",\"type\":\"string\"},{\"name\":\"equipmentSize\",\"doc\":\"The Maersk code for" +
				" container length (size).\",\"type\":{\"type\":\"record\",\"name\":\"equipmentSize\",\"names" +
				"pace\":\"com.maersk.orderhandling.containermain\",\"fields\":[{\"name\":\"equipmentSizeC" +
				"ode\",\"doc\":\"The Maersk container length (size) code.\",\"type\":\"string\"},{\"name\":\"" +
				"equipmentSizeName\",\"doc\":\"The Maersk container length (size).\",\"type\":\"string\"}]" +
				"}},{\"name\":\"equipmentHeight\",\"doc\":\"The Maersk code for container height.\",\"defa" +
				"ult\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"equipmentHeight\",\"namespace\":\"" +
				"com.maersk.orderhandling.containermain\",\"fields\":[{\"name\":\"equipmentHeightCode\"," +
				"\"doc\":\"The Maersk code for container height.\",\"type\":\"string\"},{\"name\":\"equipmen" +
				"tHeightName\",\"doc\":\"The Maersk container height.\",\"type\":\"string\"}]}]},{\"name\":\"" +
				"equipmentType\",\"doc\":\"The Maersk description of type of equipment.\",\"type\":{\"typ" +
				"e\":\"record\",\"name\":\"equipmentType\",\"namespace\":\"com.maersk.orderhandling.contain" +
				"ermain\",\"fields\":[{\"name\":\"equipmentTypeCode\",\"doc\":\"The Maersk code for equipme" +
				"nt type.\",\"type\":\"string\"},{\"name\":\"equipmentTypeName\",\"doc\":\"The Maersk name fo" +
				"r equipment type.\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"equipmentTy" +
				"peChildEquipmentType\",\"doc\":\"Subtype description of the container type. This is " +
				"upper level of the recursion level 0. It is not spelled out here to allow the Av" +
				"ro schema to be backward and forward compliant.\",\"default\":null,\"type\":[\"null\",{" +
				"\"type\":\"record\",\"name\":\"equipmentTypeChildEquipmentType\",\"namespace\":\"com.maersk" +
				".orderhandling.containermain\",\"fields\":[{\"name\":\"equipmentTypeCode\",\"doc\":\"The M" +
				"aersk code for equipment type.\",\"type\":\"string\"},{\"name\":\"equipmentTypeName\",\"do" +
				"c\":\"The Maersk name for equipment type.\",\"default\":null,\"type\":[\"null\",\"string\"]" +
				"},{\"name\":\"equipmentTypeChildEquipmentTypeL1\",\"doc\":\"Subtype description of the " +
				"container type. This is lower level of the recursion level 1.\",\"default\":null,\"t" +
				"ype\":[\"null\",{\"type\":\"record\",\"name\":\"equipmentTypeChildEquipmentTypeL1\",\"namesp" +
				"ace\":\"com.maersk.orderhandling.containermain\",\"fields\":[{\"name\":\"equipmentTypeCo" +
				"de\",\"doc\":\"The Maersk code for equipment type.\",\"type\":\"string\"},{\"name\":\"equipm" +
				"entTypeName\",\"doc\":\"The Maersk name for equipment type.\",\"default\":null,\"type\":[" +
				"\"null\",\"string\"]}]}]}]}]}]}}]}},{\"name\":\"alternativeCodes\",\"default\":null,\"type\"" +
				":[\"null\",{\"type\":\"record\",\"name\":\"alternativeCodes\",\"namespace\":\"com.maersk.orde" +
				"rhandling.containermain\",\"fields\":[{\"name\":\"ALTERNATIVE_CONTAINER_IDENTIFIER\",\"d" +
				"oc\":\"An alternative identification code of the equipment - usually provided from" +
				" customer when container is customer owned.\",\"default\":null,\"type\":[\"null\",\"stri" +
				"ng\"]}]}]}]}");
		/// <summary>
		/// The full ISO 6346 standardised container identification code.
		/// </summary>
		private string _isoCombinedCode;
		/// <summary>
		/// The owning company's ISO 6346 code.
		/// </summary>
		private string _isoOwnerCode;
		/// <summary>
		/// The equipment type ISO 6346 category code - this will be 'U'.
		/// </summary>
		private string _isoCategoryCode;
		/// <summary>
		/// The ISO 6346 equipment identification code serial number part.
		/// </summary>
		private System.Nullable<System.Int32> _isoSerialNumber;
		/// <summary>
		/// The ISO 6346 equipment identification code check digit.
		/// </summary>
		private System.Nullable<System.Int32> _isoCheckDigitNumber;
		/// <summary>
		/// A classification of size and type of the container.
		/// </summary>
		private com.maersk.orderhandling.containermain.equipmentSizeType _equipmentSizeType;
		private com.maersk.orderhandling.containermain.alternativeCodes _alternativeCodes;
		public virtual Schema Schema
		{
			get
			{
				return container._SCHEMA;
			}
		}
		/// <summary>
		/// The full ISO 6346 standardised container identification code.
		/// </summary>
		public string isoCombinedCode
		{
			get
			{
				return this._isoCombinedCode;
			}
			set
			{
				this._isoCombinedCode = value;
			}
		}
		/// <summary>
		/// The owning company's ISO 6346 code.
		/// </summary>
		public string isoOwnerCode
		{
			get
			{
				return this._isoOwnerCode;
			}
			set
			{
				this._isoOwnerCode = value;
			}
		}
		/// <summary>
		/// The equipment type ISO 6346 category code - this will be 'U'.
		/// </summary>
		public string isoCategoryCode
		{
			get
			{
				return this._isoCategoryCode;
			}
			set
			{
				this._isoCategoryCode = value;
			}
		}
		/// <summary>
		/// The ISO 6346 equipment identification code serial number part.
		/// </summary>
		public System.Nullable<System.Int32> isoSerialNumber
		{
			get
			{
				return this._isoSerialNumber;
			}
			set
			{
				this._isoSerialNumber = value;
			}
		}
		/// <summary>
		/// The ISO 6346 equipment identification code check digit.
		/// </summary>
		public System.Nullable<System.Int32> isoCheckDigitNumber
		{
			get
			{
				return this._isoCheckDigitNumber;
			}
			set
			{
				this._isoCheckDigitNumber = value;
			}
		}
		/// <summary>
		/// A classification of size and type of the container.
		/// </summary>
		public com.maersk.orderhandling.containermain.equipmentSizeType equipmentSizeType
		{
			get
			{
				return this._equipmentSizeType;
			}
			set
			{
				this._equipmentSizeType = value;
			}
		}
		public com.maersk.orderhandling.containermain.alternativeCodes alternativeCodes
		{
			get
			{
				return this._alternativeCodes;
			}
			set
			{
				this._alternativeCodes = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.isoCombinedCode;
			case 1: return this.isoOwnerCode;
			case 2: return this.isoCategoryCode;
			case 3: return this.isoSerialNumber;
			case 4: return this.isoCheckDigitNumber;
			case 5: return this.equipmentSizeType;
			case 6: return this.alternativeCodes;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.isoCombinedCode = (System.String)fieldValue; break;
			case 1: this.isoOwnerCode = (System.String)fieldValue; break;
			case 2: this.isoCategoryCode = (System.String)fieldValue; break;
			case 3: this.isoSerialNumber = (System.Nullable<System.Int32>)fieldValue; break;
			case 4: this.isoCheckDigitNumber = (System.Nullable<System.Int32>)fieldValue; break;
			case 5: this.equipmentSizeType = (com.maersk.orderhandling.containermain.equipmentSizeType)fieldValue; break;
			case 6: this.alternativeCodes = (com.maersk.orderhandling.containermain.alternativeCodes)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
