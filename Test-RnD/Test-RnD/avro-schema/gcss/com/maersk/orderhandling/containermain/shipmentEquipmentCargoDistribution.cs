// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace com.maersk.orderhandling.containermain
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	/// <summary>
	/// A description of a single cargo piece stuffing/distribution in the container.
	/// </summary>
	public partial class shipmentEquipmentCargoDistribution : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"shipmentEquipmentCargoDistribution\",\"doc\":\"A description" +
				" of a single cargo piece stuffing/distribution in the container.\",\"namespace\":\"c" +
				"om.maersk.orderhandling.containermain\",\"fields\":[{\"name\":\"shipmentEquipmentCargo" +
				"DistributionIdentifier\",\"doc\":\"A unique identifier of the stuffing entity. Taken" +
				" from EQUIPMENT_STUFFING INSTANCE_ID in GCSS database.\",\"type\":\"string\"},{\"name\"" +
				":\"cargoPackageType\",\"doc\":\"The style of packaging used in the container/equipmen" +
				"t.\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"cargoPackageType\",\"na" +
				"mespace\":\"com.maersk.orderhandling.containermain\",\"fields\":[{\"name\":\"cargoPackag" +
				"eTypeCode\",\"doc\":\"A standardised code for the packing style.\",\"default\":null,\"ty" +
				"pe\":[\"null\",\"string\"]},{\"name\":\"cargoPackageTypeName\",\"doc\":\"A standardised carg" +
				"o packaging style name.\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"cargo" +
				"PackageTypeDescription\",\"doc\":\"A textual description of the cargo packaging styl" +
				"e.\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"alternativeCodes\",\"doc\":\"A" +
				" list of alternative cargo package type codes.\",\"default\":null,\"type\":[\"null\",{\"" +
				"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"alternativeCode\",\"doc\":\"An altern" +
				"ative cargo package type code.\",\"namespace\":\"com.maersk.orderhandling.containerm" +
				"ain\",\"fields\":[{\"name\":\"alternativeCode\",\"doc\":\"Alternative code type code.\",\"ty" +
				"pe\":\"string\"},{\"name\":\"unPackageType\",\"doc\":\"The United Nations standardised cod" +
				"e for a package type. If any alternative package type code exists - this should " +
				"be always be specified.\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"" +
				"unPackageType\",\"namespace\":\"com.maersk.orderhandling.containermain\",\"fields\":[{\"" +
				"name\":\"unPackageTypeCode\",\"doc\":\"The United Nations standardized cargo package t" +
				"ype code.\",\"type\":\"string\"},{\"name\":\"unPackageTypeName\",\"doc\":\"The name of the U" +
				"nited Nations standardized cargo package type.\",\"type\":\"string\"},{\"name\":\"unPack" +
				"ageTypeDescription\",\"doc\":\"A description of the United Nations standardized carg" +
				"o package type.\",\"default\":null,\"type\":[\"null\",\"string\"]}]}]},{\"name\":\"imDgPacka" +
				"geType\",\"doc\":\"Package types specifically described for hazardous cargo.\",\"defau" +
				"lt\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"imDgPackageType\",\"namespace\":\"c" +
				"om.maersk.orderhandling.containermain\",\"fields\":[{\"name\":\"imDgPackageTypeCode\",\"" +
				"doc\":\"The International Maritime Dangerous Goods code (Up to 5 characters). E.g." +
				": 11HA2, 1A1.\",\"type\":\"string\"},{\"name\":\"imDgPackageTypeName\",\"doc\":\"The packagi" +
				"ng type name.\",\"type\":\"string\"},{\"name\":\"imDgPackageTypeDescription\",\"doc\":\"A te" +
				"xt describing the package type.\",\"default\":null,\"type\":[\"null\",\"string\"]}]}]}]}}" +
				"]}]}]},{\"name\":\"shipmentEquipmentCargoDistributionStatus\",\"doc\":\"Indicates wheth" +
				"er the stuffing is planned or actual.\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"en" +
				"um\",\"name\":\"shipmentEquipmentCargoDistributionStatus\",\"namespace\":\"com.maersk.or" +
				"derhandling.containermain\",\"symbols\":[\"PLANNING\",\"ACTUAL\"]}}},{\"name\":\"stuffedPa" +
				"ckageQuantity\",\"doc\":\"The number of outermost cargo packages in stuffing.\",\"defa" +
				"ult\":null,\"type\":[\"null\",\"long\"]},{\"name\":\"stuffedCustomerProductQuantity\",\"doc\"" +
				":\"The number of customer products in stuffing.\",\"default\":null,\"type\":[\"null\",\"l" +
				"ong\"]},{\"name\":\"stuffedGrossWeight\",\"doc\":\"The weight of cargo stuffed including" +
				" outer packaging materials and palettes.\",\"default\":null,\"type\":[\"null\",\"double\"" +
				"]},{\"name\":\"stuffedNetWeight\",\"doc\":\"The weight of cargo stuffed excluding outer" +
				" packaging materials and palettes.\",\"default\":null,\"type\":[\"null\",\"double\"]},{\"n" +
				"ame\":\"stuffedWeightWeightUnit\",\"doc\":\"The measurement unit of the stuffed cargo " +
				"gross weight.\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"weightWeig" +
				"htUnit\",\"namespace\":\"com.maersk.orderhandling.containermain\",\"fields\":[{\"name\":\"" +
				"unitOfMeasurementCode\",\"doc\":\"The measurement code - E.g.: KGS, Metric Ton, US L" +
				"BS.\",\"type\":\"string\"},{\"name\":\"unitOfMeasurementName\",\"doc\":\"The full name of th" +
				"e measurement unit.\",\"type\":\"string\"},{\"name\":\"measurementSystem\",\"doc\":\"Indicat" +
				"or for the measurement system used.\",\"type\":{\"type\":\"record\",\"name\":\"measurement" +
				"System\",\"namespace\":\"com.maersk.orderhandling.containermain\",\"fields\":[{\"name\":\"" +
				"measurementSystemCode\",\"doc\":\"The abbreviated measure system name. - E.g.: S.I. " +
				"(Metric), Imperial, US Customary Units, Time, Industry Standard.\",\"type\":\"string" +
				"\"},{\"name\":\"measurementSystemName\",\"doc\":\"The full measure system name.\",\"type\":" +
				"\"string\"}]}}]}]},{\"name\":\"stuffedVolume\",\"doc\":\"The volume of cargo stuffed incl" +
				"uding packaging materials and palettes.\",\"default\":null,\"type\":[\"null\",\"double\"]" +
				"},{\"name\":\"stuffedVolumeVolumeUnit\",\"doc\":\"The measurement unit of the gross stu" +
				"ffed cargo volume.\",\"default\":null,\"type\":[\"null\",{\"type\":\"record\",\"name\":\"stuff" +
				"edVolumeVolumeUnit\",\"namespace\":\"com.maersk.orderhandling.containermain\",\"fields" +
				"\":[{\"name\":\"unitOfMeasurementCode\",\"doc\":\"The measurement code - E.g.: Litre, Ga" +
				"llon, Cubic Metres.\",\"type\":\"string\"},{\"name\":\"unitOfMeasurementName\",\"doc\":\"The" +
				" full name of the measurement unit.\",\"type\":\"string\"},{\"name\":\"measurementSystem" +
				"\",\"doc\":\"Indicator for the measurement system used.\",\"type\":\"measurementSystem\"}" +
				"]}]},{\"name\":\"isOutOfGauge\",\"doc\":\"Indicate when the stuffed cargo is bigger tha" +
				"n what can normally be stuffed in the given equipment/container size.\",\"default\"" +
				":false,\"type\":\"boolean\"},{\"name\":\"isStuffingConfirmed\",\"doc\":\"Flag indicating wh" +
				"ether the physical stuffing of the cargo has completed.\",\"default\":true,\"type\":\"" +
				"boolean\"},{\"name\":\"shipmentLines\",\"doc\":\"The cargo(s) stuffed in equipment/conta" +
				"iner and transported by the shipment.\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"r" +
				"ecord\",\"name\":\"shipmentLine\",\"doc\":\"One cargo item stuffed in equipment/containe" +
				"r and transported by the shipment.\",\"namespace\":\"com.maersk.orderhandling.contai" +
				"nermain\",\"fields\":[{\"name\":\"shipmentLineIdentifier\",\"doc\":\"Identification of the" +
				" unique cargo that is stuffed in the container. The CARGO INSTANCE_ID from GCSS " +
				"database.\",\"type\":\"string\"},{\"name\":\"commodityClassificationAssociations\",\"doc\":" +
				"\"A list classifying the cargo in commodity types provided by customer.\",\"default" +
				"\":null,\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"commodity" +
				"ClassificationAssociation\",\"namespace\":\"com.maersk.orderhandling.containermain\"," +
				"\"fields\":[{\"name\":\"commodityCode\",\"doc\":\"A customer provided non-standardized co" +
				"mmodity code.\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"name\":\"commodityName\"," +
				"\"doc\":\"A customer provided non-standardized commodity name.\",\"default\":null,\"typ" +
				"e\":[\"null\",\"string\"]},{\"name\":\"commodityClassification\",\"doc\":\"Standardized comm" +
				"odity classification information.\",\"type\":{\"type\":\"record\",\"name\":\"commodityClas" +
				"sification\",\"namespace\":\"com.maersk.orderhandling.containermain\",\"fields\":[{\"nam" +
				"e\":\"commodityGroup\",\"doc\":\"The commodity category type.\",\"default\":null,\"type\":[" +
				"\"null\",{\"type\":\"record\",\"name\":\"commodityGroup\",\"namespace\":\"com.maersk.orderhan" +
				"dling.containermain\",\"fields\":[{\"name\":\"commodityGroupCode\",\"doc\":\"The identifyi" +
				"ng code for the commodity category.\",\"type\":\"string\"},{\"name\":\"commodityGroupNam" +
				"e\",\"doc\":\"The full name of the commodity category.\",\"type\":\"string\"}]}]},{\"name\"" +
				":\"commodityCode\",\"doc\":\"The HS code for the commodity.\",\"type\":\"string\"},{\"name\"" +
				":\"commodityName\",\"doc\":\"A textual description of the commodity.\",\"type\":\"string\"" +
				"},{\"name\":\"commodityClassificationChild\",\"doc\":\"A sub category commodity descrip" +
				"tion. This is the top level of the recursion level 0 not written out here to kee" +
				"p the Avro schema backward and forward compatible.\",\"default\":null,\"type\":[\"null" +
				"\",{\"type\":\"record\",\"name\":\"commodityClassificationChild\",\"namespace\":\"com.maersk" +
				".orderhandling.containermain\",\"fields\":[{\"name\":\"commodityGroup\",\"doc\":\"The comm" +
				"odity category type.\",\"default\":null,\"type\":[\"null\",\"commodityGroup\"]},{\"name\":\"" +
				"commodityCode\",\"doc\":\"The HS code for the commodity.\",\"type\":\"string\"},{\"name\":\"" +
				"commodityName\",\"doc\":\"A textual description of the commodity.\",\"type\":\"string\"}," +
				"{\"name\":\"commodityClassificationChildL1\",\"doc\":\"A sub category commodity descrip" +
				"tion. The lower level of the recursion.\",\"default\":null,\"type\":[\"null\",{\"type\":\"" +
				"record\",\"name\":\"commodityClassificationChildL1\",\"namespace\":\"com.maersk.orderhan" +
				"dling.containermain\",\"fields\":[{\"name\":\"commodityGroup\",\"doc\":\"The commodity cat" +
				"egory type.\",\"default\":null,\"type\":[\"null\",\"commodityGroup\"]},{\"name\":\"commodity" +
				"Code\",\"doc\":\"The HS code for the commodity.\",\"type\":\"string\"},{\"name\":\"commodity" +
				"Name\",\"doc\":\"A textual description of the commodity.\",\"type\":\"string\"},{\"name\":\"" +
				"commodityCodingSystem\",\"doc\":\"The system that defines the commodity codes: E.g.:" +
				" Harmonized System, MARS Commodity codes, ...\",\"type\":{\"type\":\"record\",\"name\":\"c" +
				"ommodityCodingSystem\",\"namespace\":\"com.maersk.orderhandling.containermain\",\"fiel" +
				"ds\":[{\"name\":\"commodityCodingSystemCode\",\"doc\":\"The uniquely identifying code fo" +
				"r the commodity coding system.\",\"type\":\"string\"},{\"name\":\"commodityCodingSystemN" +
				"ame\",\"doc\":\"The full name of the commodity coding system.\",\"type\":\"string\"}]}}]}" +
				"]},{\"name\":\"commodityCodingSystem\",\"doc\":\"The system that defines the commodity " +
				"codes: E.g.: Harmonized System, MARS Commodity codes, ...\",\"type\":\"commodityCodi" +
				"ngSystem\"}]}]},{\"name\":\"commodityCodingSystem\",\"doc\":\"The system that defines th" +
				"e commodity codes: E.g.: Harmonized System, MARS Commodity codes, ...\",\"type\":\"c" +
				"ommodityCodingSystem\"}]}}]}}]}]}}}]}");
		/// <summary>
		/// A unique identifier of the stuffing entity. Taken from EQUIPMENT_STUFFING INSTANCE_ID in GCSS database.
		/// </summary>
		private string _shipmentEquipmentCargoDistributionIdentifier;
		/// <summary>
		/// The style of packaging used in the container/equipment.
		/// </summary>
		private com.maersk.orderhandling.containermain.cargoPackageType _cargoPackageType;
		/// <summary>
		/// Indicates whether the stuffing is planned or actual.
		/// </summary>
		private IDictionary<string,com.maersk.orderhandling.containermain.shipmentEquipmentCargoDistributionStatus> _shipmentEquipmentCargoDistributionStatus;
		/// <summary>
		/// The number of outermost cargo packages in stuffing.
		/// </summary>
		private System.Nullable<System.Int64> _stuffedPackageQuantity;
		/// <summary>
		/// The number of customer products in stuffing.
		/// </summary>
		private System.Nullable<System.Int64> _stuffedCustomerProductQuantity;
		/// <summary>
		/// The weight of cargo stuffed including outer packaging materials and palettes.
		/// </summary>
		private System.Nullable<System.Double> _stuffedGrossWeight;
		/// <summary>
		/// The weight of cargo stuffed excluding outer packaging materials and palettes.
		/// </summary>
		private System.Nullable<System.Double> _stuffedNetWeight;
		/// <summary>
		/// The measurement unit of the stuffed cargo gross weight.
		/// </summary>
		private com.maersk.orderhandling.containermain.weightWeightUnit _stuffedWeightWeightUnit;
		/// <summary>
		/// The volume of cargo stuffed including packaging materials and palettes.
		/// </summary>
		private System.Nullable<System.Double> _stuffedVolume;
		/// <summary>
		/// The measurement unit of the gross stuffed cargo volume.
		/// </summary>
		private com.maersk.orderhandling.containermain.stuffedVolumeVolumeUnit _stuffedVolumeVolumeUnit;
		/// <summary>
		/// Indicate when the stuffed cargo is bigger than what can normally be stuffed in the given equipment/container size.
		/// </summary>
		private bool _isOutOfGauge;
		/// <summary>
		/// Flag indicating whether the physical stuffing of the cargo has completed.
		/// </summary>
		private bool _isStuffingConfirmed;
		/// <summary>
		/// The cargo(s) stuffed in equipment/container and transported by the shipment.
		/// </summary>
		private IList<com.maersk.orderhandling.containermain.shipmentLine> _shipmentLines;
		public virtual Schema Schema
		{
			get
			{
				return shipmentEquipmentCargoDistribution._SCHEMA;
			}
		}
		/// <summary>
		/// A unique identifier of the stuffing entity. Taken from EQUIPMENT_STUFFING INSTANCE_ID in GCSS database.
		/// </summary>
		public string shipmentEquipmentCargoDistributionIdentifier
		{
			get
			{
				return this._shipmentEquipmentCargoDistributionIdentifier;
			}
			set
			{
				this._shipmentEquipmentCargoDistributionIdentifier = value;
			}
		}
		/// <summary>
		/// The style of packaging used in the container/equipment.
		/// </summary>
		public com.maersk.orderhandling.containermain.cargoPackageType cargoPackageType
		{
			get
			{
				return this._cargoPackageType;
			}
			set
			{
				this._cargoPackageType = value;
			}
		}
		/// <summary>
		/// Indicates whether the stuffing is planned or actual.
		/// </summary>
		public IDictionary<string,com.maersk.orderhandling.containermain.shipmentEquipmentCargoDistributionStatus> shipmentEquipmentCargoDistributionStatus
		{
			get
			{
				return this._shipmentEquipmentCargoDistributionStatus;
			}
			set
			{
				this._shipmentEquipmentCargoDistributionStatus = value;
			}
		}
		/// <summary>
		/// The number of outermost cargo packages in stuffing.
		/// </summary>
		public System.Nullable<System.Int64> stuffedPackageQuantity
		{
			get
			{
				return this._stuffedPackageQuantity;
			}
			set
			{
				this._stuffedPackageQuantity = value;
			}
		}
		/// <summary>
		/// The number of customer products in stuffing.
		/// </summary>
		public System.Nullable<System.Int64> stuffedCustomerProductQuantity
		{
			get
			{
				return this._stuffedCustomerProductQuantity;
			}
			set
			{
				this._stuffedCustomerProductQuantity = value;
			}
		}
		/// <summary>
		/// The weight of cargo stuffed including outer packaging materials and palettes.
		/// </summary>
		public System.Nullable<System.Double> stuffedGrossWeight
		{
			get
			{
				return this._stuffedGrossWeight;
			}
			set
			{
				this._stuffedGrossWeight = value;
			}
		}
		/// <summary>
		/// The weight of cargo stuffed excluding outer packaging materials and palettes.
		/// </summary>
		public System.Nullable<System.Double> stuffedNetWeight
		{
			get
			{
				return this._stuffedNetWeight;
			}
			set
			{
				this._stuffedNetWeight = value;
			}
		}
		/// <summary>
		/// The measurement unit of the stuffed cargo gross weight.
		/// </summary>
		public com.maersk.orderhandling.containermain.weightWeightUnit stuffedWeightWeightUnit
		{
			get
			{
				return this._stuffedWeightWeightUnit;
			}
			set
			{
				this._stuffedWeightWeightUnit = value;
			}
		}
		/// <summary>
		/// The volume of cargo stuffed including packaging materials and palettes.
		/// </summary>
		public System.Nullable<System.Double> stuffedVolume
		{
			get
			{
				return this._stuffedVolume;
			}
			set
			{
				this._stuffedVolume = value;
			}
		}
		/// <summary>
		/// The measurement unit of the gross stuffed cargo volume.
		/// </summary>
		public com.maersk.orderhandling.containermain.stuffedVolumeVolumeUnit stuffedVolumeVolumeUnit
		{
			get
			{
				return this._stuffedVolumeVolumeUnit;
			}
			set
			{
				this._stuffedVolumeVolumeUnit = value;
			}
		}
		/// <summary>
		/// Indicate when the stuffed cargo is bigger than what can normally be stuffed in the given equipment/container size.
		/// </summary>
		public bool isOutOfGauge
		{
			get
			{
				return this._isOutOfGauge;
			}
			set
			{
				this._isOutOfGauge = value;
			}
		}
		/// <summary>
		/// Flag indicating whether the physical stuffing of the cargo has completed.
		/// </summary>
		public bool isStuffingConfirmed
		{
			get
			{
				return this._isStuffingConfirmed;
			}
			set
			{
				this._isStuffingConfirmed = value;
			}
		}
		/// <summary>
		/// The cargo(s) stuffed in equipment/container and transported by the shipment.
		/// </summary>
		public IList<com.maersk.orderhandling.containermain.shipmentLine> shipmentLines
		{
			get
			{
				return this._shipmentLines;
			}
			set
			{
				this._shipmentLines = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.shipmentEquipmentCargoDistributionIdentifier;
			case 1: return this.cargoPackageType;
			case 2: return this.shipmentEquipmentCargoDistributionStatus;
			case 3: return this.stuffedPackageQuantity;
			case 4: return this.stuffedCustomerProductQuantity;
			case 5: return this.stuffedGrossWeight;
			case 6: return this.stuffedNetWeight;
			case 7: return this.stuffedWeightWeightUnit;
			case 8: return this.stuffedVolume;
			case 9: return this.stuffedVolumeVolumeUnit;
			case 10: return this.isOutOfGauge;
			case 11: return this.isStuffingConfirmed;
			case 12: return this.shipmentLines;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.shipmentEquipmentCargoDistributionIdentifier = (System.String)fieldValue; break;
			case 1: this.cargoPackageType = (com.maersk.orderhandling.containermain.cargoPackageType)fieldValue; break;
			case 2: this.shipmentEquipmentCargoDistributionStatus = (IDictionary<string,com.maersk.orderhandling.containermain.shipmentEquipmentCargoDistributionStatus>)fieldValue; break;
			case 3: this.stuffedPackageQuantity = (System.Nullable<System.Int64>)fieldValue; break;
			case 4: this.stuffedCustomerProductQuantity = (System.Nullable<System.Int64>)fieldValue; break;
			case 5: this.stuffedGrossWeight = (System.Nullable<System.Double>)fieldValue; break;
			case 6: this.stuffedNetWeight = (System.Nullable<System.Double>)fieldValue; break;
			case 7: this.stuffedWeightWeightUnit = (com.maersk.orderhandling.containermain.weightWeightUnit)fieldValue; break;
			case 8: this.stuffedVolume = (System.Nullable<System.Double>)fieldValue; break;
			case 9: this.stuffedVolumeVolumeUnit = (com.maersk.orderhandling.containermain.stuffedVolumeVolumeUnit)fieldValue; break;
			case 10: this.isOutOfGauge = (System.Boolean)fieldValue; break;
			case 11: this.isStuffingConfirmed = (System.Boolean)fieldValue; break;
			case 12: this.shipmentLines = (IList<com.maersk.orderhandling.containermain.shipmentLine>)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
